{
  "name": "combine-api",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "apps/combine-api/combine_api",
  "targets": {
    "build": {
      "executor": "@nx-python/nx-python:build",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/combine-api",
        "main": "apps/combine-api/combine_api/app.py"
      },
      "configurations": {
        "production": {}
      }
    },
    "serve": {
      "executor": "@nx-python/nx-python:serve",
      "options": {
        "main": "-m combine_api",
        "cwd": "apps/combine-api"
      }
    },
    "test": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["npx nx docker combine-api", "apps/combine-api/run-tests-in-docker-container.sh"],
        "parallel": false
      },
      "dependsOn": ["build"]
    },
    "test_offline": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["npx nx docker_offline combine-api", "apps/combine-api/run-tests-in-docker-container.sh"],
        "parallel": false
      },
      "dependsOn": ["build"]
    },
    "lint": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["poetry run flake8"],
        "cwd": "apps/combine-api",
        "parallel": false,
        "lintFilePatterns": ["combine-api/**/*.py", "tests/**/*.py"]
      }
    },
    "docker": {
      "inputs": [],
      "executor": "@nx-tools/nx-docker:build",
      "options": {
        "file": "./apps/combine-api/Dockerfile",
        "context": "./apps/combine-api",
        "push": true,
        "build-args": ["app=combine-api"],
        "platforms": ["linux/amd64"],
        "metadata": {
          "enabled": true,
          "images": ["ghcr.io/biosimulations/combine-api"],
          "labels": [
            "org.opencontainers.image.title=BioSimulations COMBINE API",
            "org.opencontainers.image.description=Docker image for the BioSimulations COMBINE API",
            "org.opencontainers.image.url=https://biosimulations.org/",
            "org.opencontainers.image.documentation=https://docs.biosimulations.org/",
            "org.opencontainers.image.source=https://github.com/biosimulations/biosimulations",
            "org.opencontainers.image.authors=BioSimulations Team <info@biosimulations.org>",
            "org.opencontainers.image.vendor=BioSimulations",
            "org.opencontainers.image.licenses=MIT"
          ],
          "tags": [
            "type=schedule",
            "type=ref,event=branch",
            "type=ref,event=tag",
            "type=ref,event=pr",
            "type=semver,pattern={{version}}",
            "type=sha"
          ]
        }
      }
    },
    "docker_offline": {
      "executor": "@nx-tools/nx-docker:build",
      "options": {
        "file": "./apps/combine-api/Dockerfile",
        "context": "./apps/combine-api",
        "push": false,
        "build-args": ["app=combine-api"],
        "outputs": ["type=docker"],
        "metadata": {
          "enabled": true,
          "images": ["ghcr.io/biosimulations/combine-api"],
          "labels": [
            "org.opencontainers.image.title=BioSimulations COMBINE API",
            "org.opencontainers.image.description=Docker image for the BioSimulations COMBINE API",
            "org.opencontainers.image.url=https://biosimulations.org/",
            "org.opencontainers.image.documentation=https://docs.biosimulations.org/",
            "org.opencontainers.image.source=https://github.com/biosimulations/biosimulations",
            "org.opencontainers.image.authors=BioSimulations Team <info@biosimulations.org>",
            "org.opencontainers.image.vendor=BioSimulations",
            "org.opencontainers.image.licenses=MIT"
          ],
          "tags": [
            "type=schedule",
            "type=ref,event=branch",
            "type=ref,event=tag",
            "type=ref,event=pr",
            "type=semver,pattern={{version}}",
            "type=sha"
          ]
        }
      }
    }
  },
  "tags": [],
  "namedInputs": {
    "projectSpecificFiles": [
      "{workspaceRoot}/apps/combine-api/Dockerfile-assets/Pipfile",
      "{workspaceRoot}/apps/combine-api/Dockerfile-assets/Pipfile.lock",
      "{workspaceRoot}/apps/combine-api/Dockerfile",
      "{workspaceRoot}/apps/combine-api/pyproject.toml",
      "{workspaceRoot}/apps/combine-api/poetry.lock"
    ]
  }
}
